
##### Application
server:
  port: ${port:8100}
  servlet:
    contextPath: /api/v1
  error:
    includeBindingErrors: always



##### Spring
spring:
  application:
    name: pool-airport

  jackson:
    defaultPropertyInclusion: NON_NULL


  jpa:
    hibernate:
      # none, validate, update, create, create-drop
      ddlAuto: validate
      generateStatistics: true
      properties:
        hibernate:
          connection:
            providerDisablesAutocommit: true
    # End of what should be in local profile (this is not prod compliant)
#    hibernate:
#      connection:
#        provider_disables_autocommit:

    openInView: false




  profiles:
    active:  ${active_profiles:local}

  main:
    lazyInitialization: true

#  mvc:
     # hides validation errors
#    problemdetails:
#      enabled: true

  config:
    import: "optional:configserver:http://localhost:8888"

  ## --- DataSource ---
  liquibase:
    changeLog: classpath:db/changelog/db.changelog-master.yaml

  # Datasource is defined in a profile-specific application-<profile>.yaml
  datasource:
    driverClassName: ${datasource.driver.classname}
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
    hikari:
      autoCommit: false
      poolName: hikari-airport



    showSql: true
    properties:
      hibernate:
        format_sql: true

  output:
    ansi:
      enabled: ALWAYS

  # End of what should be in local profile (this is not prod compliant)
hibernate:
  connection:
    provider_disables_autocommit:




##### Logging configuration #####
logging:
  level:
    root: WARN


#################

partnerServices:
  services:
    - name: service1
      hostname: host1.some.domain
      health-endpoint: /health

    - name: service2
      hostname: host2.some.domain

# TODO this should be in a local profile
datasource:
  username: sa
  password: sa
  # schema: something
  url: jdbc:h3:mem:testdb;
  driver:
    classname: org.h2.Driver

# Configuration for Flexy Pool
decorator:
 datasource:
   flexyPool:
     threshold:
       connection:
         acquire: 1
         lease: 0


management:

  # Auto-configuation of liveness/readiness probes
  health:
    probes:
      enabled: true

  endpoints:
    web:
      base-path: /actuator
      # cors:
      #   allowed-origins: "http://example.com"
      #   allowed-methods: "GET,POST"
      exposure:
        include: info,health,liquibase

  endpoint:
    # SRE Health (liveness, readiness) for integration with kubernetes
    health:
      probes:
        enabled: true
      liveness:
        enabled: true
      readiness:
        enabled: true
      show-details: always
      # status:
      #   order: fatal,down,out-of-service,degraded,unknown,up
      #   http-mapping:
      #     degraded: 242
      #     unknown: 242
      #     fatal: 503
      #     down: 503
      #     out-of-service: 503

    liquibase:
      access: UNRESTRICTED

    metrics:
      access: UNRESTRICTED

    prometheus:
      access: UNRESTRICTED


  # ---------- Feature specific configurations ----------
  # --- Metrics (Prometheus) ---
  prometheus:
    metrics:
      export:
        enabled: true


  # --- Informaion about the application ---
  # {"git":{"commit":{"time":"2019-11-23T23:41:52Z","id":"5b27927"},"branch":"development"}}
  info:
    app:
      name: ${spring.application.name}
      version: ${project.version}
      java:
        version: ${java.version}
        source: ${java.version}
        target: ${java.version}
    env:
      enabled: true
    java:
      enabled: true
    git:
      mode: full



